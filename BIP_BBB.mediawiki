<pre>
  BIP: BBB 'Bigger Bitcoin Blocks'
  Layer: Consensus (hard fork)
  Title: Dynamic maximum block weight by miner vote
  Author: Oki Burokku <oki_burokku@protonmail.com>
  Comments-Summary: No comments yet.
  Comments-URI: https://github.com/oki-burokku/bitcoin/The-White-Paper/
  Status: Requires Miner Consensus.
  Type: Standards Track
  Created: 2020-06-01
  License: BSD-2-Clause
</pre>

==Abstract==

Replace the static base block weight hard limit with a hard limit set by coinbase vote, conducted on the same schedule as difficulty retargeting.

==Motivation==

Miners directly feel the effects, both positive and negative, of any maximum block weight change imposed by their peers.  Larger blocks allow more growth in the on-chain ecosystem, while smaller blocks reduce resource requirements network-wide.  Miners also act as an efficient proxy for the rest of the ecosystem, since they are paid in the tokens collected for the blocks they create.

A simple deterministic system is specified, whereby a 75% mining supermajority may activate a change to the maximum block weight each 2016 blocks.  Each change is limited to a 4M increase from the previous block weight hard limit, or a decrease of similar magnitude.  Among adopting miners, there will be no disagreement on the evolution of the maximum block weight.

Adopting nodes (and miners) should follow the blockchain with the most PoW, they should not police maximum block weight on blocks received from the network. To stop the nodes (and miners) being spammed with super massive blocks an upper limit on acceptable maximum block weight on blocks received from the network should be maintained. That upper limit shall be 3x the current maximum block weight. 

==Specification==

===Dynamic Maximum Block Weight===
# Initial value of <code>hardLimit</code> is 4M.
# The <code>hardLimit</code> shall only be increased or decreased by 4M.
# The minimum <code>hardLimit</code> shall be >= 4M. Thus the minimum multiplier value shall be 1.
# The maximum <code>hardLimit</code> shall be < (100000 x 4M). Thus the maximum multiplier value shall be 99999.
# Changing <code>hardLimit</code> is accomplished by encoding a multiplier of 4M, a vote, within a block's coinbase scriptSig, and by processing the votes contained in the previous retargeting period.<br /><br />
## Vote encoding
### A vote is represented as a multipler of 4M using the BIPBBB pattern<br /><br /><code>/BIPBBB/X[0-9]+/</code><br /><br />Example 1: <code>/BIPBBB/X2/</code> is a vote for a 8000000-byte <code>hardLimit</code>.<br /><br />Example 2: <code>/BIPBBB/X11/</code> is a vote for a 44000000-byte <code>hardLimit</code>.<br /><br />
### If the block height is encoded at the start of the coinbase scriptSig, as per BIP34, it is ignored.
### Only the first BIPBBB pattern match is processed in "Maximum block weight recalculation" below.
### A multiplier value is represented by consecutive base-ten digits.
## Maximum block weight recalculation
### A <code>new hardLimit</code> is calculated after each difficulty adjustment period of 2016 blocks, and applies to the next 2016 blocks.
### Absent/zero-valued votes are counted as votes for the <code>current hardLimit</code>, which is defined as the <code>hardLimit</code> of the previous interval.
### The votes of the previous 2016 blocks are sorted by multiplier vote.
### Raising <code>hardLimit</code><br /><br />
#### The <code>new multiplier</code> is defined as the vote of the 1512th highest block.
#### If the resultant <code>new multiplier</code> is greater than <code>current multiplier</code>, it is set to (<code>current multiplier</code> + 1).
#### The <code>new hardLimit</code> is the value of (<code>new multiplier</code> * 4000000).<br /><br />
### Lowering <code>hardLimit</code><br /><br />
#### The <code>new multiplier</code> is defined as the vote of the 1512th lowest block.
#### If the resultant <code>new mutiplier</code> is less than <code>current multiplier</code>, it is set to that (<code>current multiplier</code> - 1).
#### If the <code>new mutiplier</code> is less than 1, then the <code>new mutiplier</code> is set to 1.
#### The <code>new hardLimit</code> is the value of (<code>new multiplier</code> * 4000000).<br /><br />
### Otherwise, <code>new hardLimit</code> remains the same as <code>current hardLimit</code>.

===Signature Hashing Operations Limits===
# The per-block signature hashing operations limit is scaled to (<code>hardLimit</code> x 3 / 50).
# A maximum serialized transaction size of 1000000 bytes is imposed.

===Block Weight Validation===
# The segregated witness data ratio of 3:1 shall be maintained.
# The maximum block weight of blocks that are locally mined shall be limited to <code>hardLimit</code>.
# The maximum block weight of blocks received from the network shall be limited to (<code>hardLimit</code> x 3).

==Recommendations==

===Publication of <code>hardLimit</code>===
For the benefit of all observers, it is recommended that <code>hardLimit</code> be published.  Example: a complete coinbase string might read <br /><br /><code>/BIPBBB/X3/8M/</code><br /><br /> which indicates a vote for 12M maximum block weight, and an enforced <code>hardLimit</code> of a 8M block weight for the block containing the coinbase string.

==Deployment==

This BIP is presumed deployed and activated as of a past block height by implementing nodes on the bitcoin mainnet.  The activation height is dependant on miner consensus.  It has no effect until at least 1512 of 2016 blocks to vote to increase the block weight multiplier.

==Backward compatibility==

#The first block larger than 4M will create a network partition, as nodes with a fixed 4M hard limit reject that block; or
#The first block with a non segregated witness data area larger than 1M will create a network partition, as nodes with a fixed 1M hard limit reject that block.

==Command Line Options==

The option <code>-blockmaxweightmultiplier=n</code> may be used to set the block weight multipler at startup. The n value shall be >1 and <100000.

==Implementations==
https://github.com/oki-burokku/bitcoin/tree/bbb</br>

==Copyright==
#This document is based on the original BIP100 proposal by J. Garzik, T. Harding & D. Johannsson.
#This document is licensed under the BSD 2-clause license.

